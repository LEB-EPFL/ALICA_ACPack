/**
 * Copyright (C) 2018 Laboratory of Experimental Biophysics
 * Ecole Polytechnique Federale de Lausanne
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package ch.epfl.leb.alica.acpack.analyzers.defcon;

import ch.epfl.leb.alica.interfaces.analyzers.AnalyzerStatusPanel;

/**
 * Status panel of the DEFCoN analyzer.
 * 
 * @author Kyle M. Douglass
 */
public class DefconStatusPanel extends AnalyzerStatusPanel {
    
    /**
     * A reference to the core DEFCoN machinery.
     */
    private Defcon defcon;
    
    /**
     * Creates new form DefconStatusPanel.
     */
    public DefconStatusPanel(Defcon defcon) {
        this.defcon = defcon;
        initComponents();        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelDefcon = new javax.swing.JLabel();
        cbLiveView = new javax.swing.JCheckBox();

        labelDefcon.setText("DEFCoN");

        cbLiveView.setText("Live view");
        cbLiveView.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbLiveViewItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(labelDefcon))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(cbLiveView)))
                .addContainerGap(124, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelDefcon)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbLiveView)
                .addContainerGap(93, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cbLiveViewItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbLiveViewItemStateChanged
        if (cbLiveView.isSelected()) {
            defcon.liveModeOn();
        } else {
            defcon.liveModeOff();
        }
    }//GEN-LAST:event_cbLiveViewItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox cbLiveView;
    private javax.swing.JLabel labelDefcon;
    // End of variables declaration//GEN-END:variables
}
